version: '2'

services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api
    depends_on:
      - db
      - redis
      - rabbitmq
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_REDIS_HOST=redis
      - SPRING_RABBITMQ_HOST=rabbitmq

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: worker
    depends_on:
      - db
      - rabbitmq
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_RABBITMQ_HOST=rabbitmq

  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
    volumes:
      - db_volume

  redis:
    image: "redis:alpine"
    container_name: redis
    volumes:
      - redis_volume

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    volumes:
      - rabbitmq_volume

volumes:
  db_volume:
    driver: local
  redis_volume:
    driver: local
  rabbitmq_volume:
    driver: local